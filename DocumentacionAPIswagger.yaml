swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: authentication-controller
    description: Authentication Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: genero-controller
    description: Genero Controller
  - name: pelicula-controller
    description: Pelicula Controller
  - name: personaje-controller
    description: Personaje Controller
paths:
  /auth/authentication:
    post:
      tags:
        - authentication-controller
      summary: createAuthentication
      operationId: createAuthenticationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: authenticationRequest
          description: authenticationRequest
          required: true
          schema:
            $ref: '#/definitions/AuthenticationRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /auth/register:
    post:
      tags:
        - authentication-controller
      summary: createAccount
      operationId: createAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: usuarioDto
          description: usuarioDto
          required: true
          schema:
            $ref: '#/definitions/UsuarioDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters:
    get:
      tags:
        - personaje-controller
      summary: mostrarPorNombresEImagenes
      operationId: mostrarPorNombresEImagenesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - personaje-controller
      summary: guardarPersonaje
      operationId: guardarPersonajeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: personaje
          description: personaje
          required: true
          schema:
            $ref: '#/definitions/PersonajeCrearDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters/edad/{edad}:
    get:
      tags:
        - personaje-controller
      summary: mostrarPorEdad
      operationId: mostrarPorEdadUsingGET
      produces:
        - '*/*'
      parameters:
        - name: edad
          in: path
          description: edad
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters/movies/{id}:
    get:
      tags:
        - personaje-controller
      summary: mostrarPelisPorId
      operationId: mostrarPelisPorIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters/nombre/{nombre}:
    get:
      tags:
        - personaje-controller
      summary: mostrarPorNombre
      operationId: mostrarPorNombreUsingGET
      produces:
        - '*/*'
      parameters:
        - name: nombre
          in: path
          description: nombre
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters/personajes:
    get:
      tags:
        - personaje-controller
      summary: mostrarPersonajes
      operationId: mostrarPersonajesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters/peso/{peso}:
    get:
      tags:
        - personaje-controller
      summary: mostrarPorPeso
      operationId: mostrarPorPesoUsingGET
      produces:
        - '*/*'
      parameters:
        - name: peso
          in: path
          description: peso
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /characters/{id}:
    put:
      tags:
        - personaje-controller
      summary: actualizarPersonaje
      operationId: actualizarPersonajeUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: personajeDto
          description: personajeDto
          required: true
          schema:
            $ref: '#/definitions/PersonajeEditarDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - personaje-controller
      summary: borrarPersonaje
      operationId: borrarPersonajeUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /generos:
    get:
      tags:
        - genero-controller
      summary: mostrarGeneros
      operationId: mostrarGenerosUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - genero-controller
      summary: guardarGenero
      operationId: guardarGeneroUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: generoDto
          description: generoDto
          required: true
          schema:
            $ref: '#/definitions/GeneroCrearDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /generos/{id}:
    put:
      tags:
        - genero-controller
      summary: actualizarGenero
      operationId: actualizarGeneroUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: generoDto
          description: generoDto
          required: true
          schema:
            $ref: '#/definitions/GeneroEditarDto'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - genero-controller
      summary: borrarGenero
      operationId: borrarGeneroUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /movies:
    get:
      tags:
        - pelicula-controller
      summary: mostrarPeliculas
      operationId: mostrarPeliculasUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - pelicula-controller
      summary: guardarPelicula
      operationId: guardarPeliculaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: peliculaDto
          description: peliculaDto
          required: true
          schema:
            $ref: '#/definitions/PeliculaCrearDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /movies/genero/{id}:
    get:
      tags:
        - pelicula-controller
      summary: mostrarPorGenero
      operationId: mostrarPorGeneroUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /movies/orden/ASC:
    get:
      tags:
        - pelicula-controller
      summary: mostrarPeliculasPorCreacionAscendente
      operationId: mostrarPeliculasPorCreacionAscendenteUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /movies/orden/DESC:
    get:
      tags:
        - pelicula-controller
      summary: mostrarPeliculasPorCreacionDescendiente
      operationId: mostrarPeliculasPorCreacionDescendienteUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /movies/titulo/{titulo}:
    get:
      tags:
        - pelicula-controller
      summary: mostrarPeliculasPorTitulo
      operationId: mostrarPeliculasPorTituloUsingGET
      produces:
        - '*/*'
      parameters:
        - name: titulo
          in: path
          description: titulo
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /movies/{id}:
    put:
      tags:
        - pelicula-controller
      summary: actualizarGenero
      operationId: actualizarGeneroUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: peliculaDto
          description: peliculaDto
          required: true
          schema:
            $ref: '#/definitions/PeliculaEditarDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - pelicula-controller
      summary: borrarPeliculaPorId
      operationId: borrarPeliculaPorIdUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  AuthenticationRequest:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: AuthenticationRequest
  GeneroCrearDto:
    type: object
    properties:
      imagen:
        type: string
      nombre:
        type: string
    title: GeneroCrearDto
  GeneroEditarDto:
    type: object
    properties:
      idPelicula:
        type: integer
        format: int64
      imagen:
        type: string
      nombre:
        type: string
    title: GeneroEditarDto
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  PeliculaCrearDto:
    type: object
    properties:
      calificacion:
        type: integer
        format: int32
      imagen:
        type: string
      titulo:
        type: string
    title: PeliculaCrearDto
  PeliculaEditarDto:
    type: object
    properties:
      calificacion:
        type: integer
        format: int32
      idPersonaje:
        type: integer
        format: int64
      imagen:
        type: string
      titulo:
        type: string
    title: PeliculaEditarDto
  PersonajeCrearDto:
    type: object
    properties:
      edad:
        type: integer
        format: int32
      historia:
        type: string
      imagen:
        type: string
      nombre:
        type: string
      peso:
        type: integer
        format: int32
    title: PersonajeCrearDto
  PersonajeEditarDto:
    type: object
    properties:
      edad:
        type: integer
        format: int32
      historia:
        type: string
      idPelicula:
        type: integer
        format: int64
      imagen:
        type: string
      nombre:
        type: string
      peso:
        type: integer
        format: int32
    title: PersonajeEditarDto
  UsuarioDto:
    type: object
    properties:
      mail:
        type: string
      password:
        type: string
      username:
        type: string
    title: UsuarioDto
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View

